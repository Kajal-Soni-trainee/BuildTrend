{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { ref, computed, onMounted } from \"vue\";\nimport { axiosPost, axiosGet } from \"../services/service\";\nexport default {\n  __name: 'Estimates',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const store = useStore();\n    const job_id = ref(route.params.job_id);\n    const estimates = computed(() => {\n      return store.state.property.estimates;\n    });\n    async function accept(estimate_id, contractor_id, job_id) {\n      const result = await axiosPost(\"/selectEstimate\", {\n        job_id: job_id,\n        contractor_id: contractor_id,\n        estimate_id: estimate_id\n      });\n      if (result.status == 200) {\n        console.log(result.data);\n      }\n    }\n    async function reject(estimate_id) {\n      const result = await axiosGet(`/deleteEstimate/?id=${estimate_id}`);\n      if (result.status == 200) {\n        console.log(result.data);\n      }\n    }\n    onMounted(async () => {\n      await store.dispatch(\"triggerSetEstimates\", {\n        job_id: job_id.value\n      });\n      console.log(estimates.value);\n    });\n    const __returned__ = {\n      route,\n      store,\n      job_id,\n      estimates,\n      accept,\n      reject,\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      ref,\n      computed,\n      onMounted,\n      get axiosPost() {\n        return axiosPost;\n      },\n      get axiosGet() {\n        return axiosGet;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRoute","useStore","ref","computed","onMounted","axiosPost","axiosGet","route","store","job_id","params","estimates","state","property","accept","estimate_id","contractor_id","result","status","console","log","data","reject","dispatch","value"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/Estimates.vue"],"sourcesContent":["<template>\n  <p v-if=\"estimates.length == 0\" class=\"text-h4 text-red\">\n    No Estimates Submitted\n  </p>\n  <template v-else>\n    \n    <v-card\n      style=\"width: 1000px\"\n      :elevation=\"12\"\n      v-for=\"item in estimates\"\n      :key=\"item.estimate_id\"\n    >\n      <v-card-title class=\"text-h4\">{{ item.u_name }}</v-card-title>\n      <v-card-subtitle class=\"text-h5\">{{ item.u_email }}</v-card-subtitle>\n      <v-card-title class=\"text-h3 text-teal-darken-4\"\n        >${{ item.cost }}</v-card-title\n      >\n      <v-card-item\n        v-if=\"item.contractor_id == null\"\n        class=\"d-flex flex-row justify-end align-center gx-4\"\n      >\n        <v-btn\n          class=\"mx-2 bg-teal-darken-4\"\n          @click=\"accept(item.estimate_id, item.contractor_id, item.job_id)\"\n          >Accept</v-btn\n        >\n        <v-btn class=\"mx-2 bg-red-darken-4\" @click=\"reject(item.estimate_id)\"\n          >Reject</v-btn\n        >\n      </v-card-item>\n    </v-card>\n  </template>\n</template>\n<script setup>\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { ref, computed, onMounted } from \"vue\";\nimport { axiosPost, axiosGet } from \"../services/service\";\nconst route = useRoute();\nconst store = useStore();\nconst job_id = ref(route.params.job_id);\nconst estimates = computed(() => {\n  return store.state.property.estimates;\n});\nasync function accept(estimate_id, contractor_id, job_id) {\n  const result = await axiosPost(\"/selectEstimate\", {\n    job_id: job_id,\n    contractor_id: contractor_id,\n    estimate_id: estimate_id,\n  });\n  if (result.status == 200) {\n    console.log(result.data);\n  }\n}\nasync function reject(estimate_id) {\n  const result = await axiosGet(`/deleteEstimate/?id=${estimate_id}`);\n  if (result.status == 200) {\n    console.log(result.data);\n  }\n}\nonMounted(async () => {\n  await store.dispatch(\"triggerSetEstimates\", { job_id: job_id.value });\n  console.log(estimates.value);\n});\n</script>\n<style scoped></style>\n"],"mappings":"AAkCA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,qBAAqB;;;;;;;IACzD,MAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,MAAM,GAAGP,GAAG,CAACK,KAAK,CAACG,MAAM,CAACD,MAAM,CAAC;IACvC,MAAME,SAAS,GAAGR,QAAQ,CAAC,MAAM;MAC/B,OAAOK,KAAK,CAACI,KAAK,CAACC,QAAQ,CAACF,SAAS;IACvC,CAAC,CAAC;IACF,eAAeG,MAAMA,CAACC,WAAW,EAAEC,aAAa,EAAEP,MAAM,EAAE;MACxD,MAAMQ,MAAM,GAAG,MAAMZ,SAAS,CAAC,iBAAiB,EAAE;QAChDI,MAAM,EAAEA,MAAM;QACdO,aAAa,EAAEA,aAAa;QAC5BD,WAAW,EAAEA;MACf,CAAC,CAAC;MACF,IAAIE,MAAM,CAACC,MAAM,IAAI,GAAG,EAAE;QACxBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC;MAC1B;IACF;IACA,eAAeC,MAAMA,CAACP,WAAW,EAAE;MACjC,MAAME,MAAM,GAAG,MAAMX,QAAQ,CAAC,uBAAuBS,WAAW,EAAE,CAAC;MACnE,IAAIE,MAAM,CAACC,MAAM,IAAI,GAAG,EAAE;QACxBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC;MAC1B;IACF;IACAjB,SAAS,CAAC,YAAY;MACpB,MAAMI,KAAK,CAACe,QAAQ,CAAC,qBAAqB,EAAE;QAAEd,MAAM,EAAEA,MAAM,CAACe;MAAM,CAAC,CAAC;MACrEL,OAAO,CAACC,GAAG,CAACT,SAAS,CAACa,KAAK,CAAC;IAC9B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}