{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, computed, ref } from \"vue\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required, helpers, email, sameAs } from \"@vuelidate/validators\";\nimport { useRouter } from \"vue-router\";\nimport { axiosPost } from \"../services/service\";\nimport { isNumber, isCapAlpha, isSpecialChar } from \"../../public/scripts/validation\";\nimport router from \"@/routes/route\";\nexport default {\n  __name: 'forgetPass',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const showPass = ref(false);\n    const showCPass = ref(false);\n    const userData = reactive({\n      email: null,\n      password: null,\n      cpassword: null\n    });\n    const rules = computed(() => {\n      return {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required,\n          isNumber: helpers.withMessage(\"Password should contain some digits\", isNumber),\n          isCapAlpha: helpers.withMessage(\"Password should contain some capital letters \", isCapAlpha),\n          isSpecialChar: helpers.withMessage(\"Password should contain some specia charaters\", isSpecialChar)\n        },\n        cpassword: {\n          required,\n          sameAs: sameAs(userData.password)\n        }\n      };\n    });\n    const v$ = useVuelidate(rules, userData);\n    async function setPassword() {\n      const isValide = await v$.value.$validate();\n      if (isValide) {\n        const res = await axiosPost(\"/forgetPass\", userData);\n        if (res) {\n          router.push({\n            name: \"Login\"\n          });\n        }\n      }\n    }\n    const __returned__ = {\n      showPass,\n      showCPass,\n      userData,\n      rules,\n      v$,\n      setPassword,\n      reactive,\n      computed,\n      ref,\n      get useVuelidate() {\n        return useVuelidate;\n      },\n      get required() {\n        return required;\n      },\n      get helpers() {\n        return helpers;\n      },\n      get email() {\n        return email;\n      },\n      get sameAs() {\n        return sameAs;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axiosPost() {\n        return axiosPost;\n      },\n      get isNumber() {\n        return isNumber;\n      },\n      get isCapAlpha() {\n        return isCapAlpha;\n      },\n      get isSpecialChar() {\n        return isSpecialChar;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","computed","ref","useVuelidate","required","helpers","email","sameAs","useRouter","axiosPost","isNumber","isCapAlpha","isSpecialChar","router","showPass","showCPass","userData","password","cpassword","rules","withMessage","v$","setPassword","isValide","value","$validate","res","push","name"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/forgetPass.vue"],"sourcesContent":["<template>\n  <v-card style=\"width: 600px\" :elevation=\"12\" class=\"pa-5 rounded-xl\">\n    <v-card-title class=\"text-teal-darken-4 text-h4 text-center py-5\"\n      >Login From</v-card-title\n    >\n    <v-form>\n      <v-text-field\n        variant=\"solo-filled\"\n        label=\"email\"\n        v-model=\"userData.email\"\n        :error-messages=\"v$.email.$errors.map((e) => e.$message)\"\n        @blur=\"v$.email.$touch\"\n      ></v-text-field>\n      <v-text-field\n        variant=\"solo-filled\"\n        :type=\"showPass ? 'text' : 'password'\"\n        label=\"Password\"\n        v-model=\"userData.password\"\n        :append-inner-icon=\"showPass ? 'mdi-eye-off' : 'mdi-eye'\"\n        :error-messages=\"v$.password.$errors.map((e) => e.$message)\"\n        @blur=\"v$.password.$touch\"\n        @click:append-inner=\"showPass = !showPass\"\n      ></v-text-field>\n      <v-text-field\n        variant=\"solo-filled\"\n        :type=\"showCPass ? 'text' : 'password'\"\n        label=\"Confirm Password\"\n        v-model=\"userData.cpassword\"\n        :append-inner-icon=\"showCPass ? 'mdi-eye-off' : 'mdi-eye'\"\n        :error-messages=\"v$.cpassword.$errors.map((e) => e.$message)\"\n        @blur=\"v$.cpassword.$touch\"\n        @click:append-inner=\"showCPass = !showPass\"\n      ></v-text-field>\n      <div class=\"d-flex flex-row justify-center align-center\">\n        <v-btn class=\"bg-teal-darken-4 text-h5\" @click=\"setPassword\"\n          >Set Password</v-btn\n        >\n      </div>\n    </v-form>\n  </v-card>\n</template>\n<script setup>\nimport { reactive, computed, ref } from \"vue\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required, helpers, email, sameAs } from \"@vuelidate/validators\";\nimport { useRouter } from \"vue-router\";\nimport { axiosPost } from \"../services/service\";\nimport {\n  isNumber,\n  isCapAlpha,\n  isSpecialChar,\n} from \"../../public/scripts/validation\";\nimport router from \"@/routes/route\";\n\nconst showPass = ref(false);\nconst showCPass = ref(false);\nconst userData = reactive({\n  email: null,\n  password: null,\n  cpassword: null,\n});\n\nconst rules = computed(() => {\n  return {\n    email: { required, email },\n    password: {\n      required,\n      isNumber: helpers.withMessage(\n        \"Password should contain some digits\",\n        isNumber\n      ),\n      isCapAlpha: helpers.withMessage(\n        \"Password should contain some capital letters \",\n        isCapAlpha\n      ),\n      isSpecialChar: helpers.withMessage(\n        \"Password should contain some specia charaters\",\n        isSpecialChar\n      ),\n    },\n    cpassword: { required, sameAs: sameAs(userData.password) },\n  };\n});\n\nconst v$ = useVuelidate(rules, userData);\nasync function setPassword() {\n  const isValide = await v$.value.$validate();\n  if (isValide) {\n    const res = await axiosPost(\"/forgetPass\", userData);\n    if (res) {\n      router.push({ name: \"Login\" });\n    }\n  }\n}\n</script>\n<style scoped></style>\n"],"mappings":";AA0CA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AAC7C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,QAAQ,uBAAuB;AACxE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SACEC,QAAQ,EACRC,UAAU,EACVC,aAAa,QACR,iCAAiC;AACxC,OAAOC,MAAM,MAAM,gBAAgB;;;;;;;IAEnC,MAAMC,QAAQ,GAAGZ,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMa,SAAS,GAAGb,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMc,QAAQ,GAAGhB,QAAQ,CAAC;MACxBM,KAAK,EAAE,IAAI;MACXW,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGlB,QAAQ,CAAC,MAAM;MAC3B,OAAO;QACLK,KAAK,EAAE;UAAEF,QAAQ;UAAEE;QAAM,CAAC;QAC1BW,QAAQ,EAAE;UACRb,QAAQ;UACRM,QAAQ,EAAEL,OAAO,CAACe,WAAW,CAC3B,qCAAqC,EACrCV,QACF,CAAC;UACDC,UAAU,EAAEN,OAAO,CAACe,WAAW,CAC7B,+CAA+C,EAC/CT,UACF,CAAC;UACDC,aAAa,EAAEP,OAAO,CAACe,WAAW,CAChC,+CAA+C,EAC/CR,aACF;QACF,CAAC;QACDM,SAAS,EAAE;UAAEd,QAAQ;UAAEG,MAAM,EAAEA,MAAM,CAACS,QAAQ,CAACC,QAAQ;QAAE;MAC3D,CAAC;IACH,CAAC,CAAC;IAEF,MAAMI,EAAE,GAAGlB,YAAY,CAACgB,KAAK,EAAEH,QAAQ,CAAC;IACxC,eAAeM,WAAWA,CAAA,EAAG;MAC3B,MAAMC,QAAQ,GAAG,MAAMF,EAAE,CAACG,KAAK,CAACC,SAAS,CAAC,CAAC;MAC3C,IAAIF,QAAQ,EAAE;QACZ,MAAMG,GAAG,GAAG,MAAMjB,SAAS,CAAC,aAAa,EAAEO,QAAQ,CAAC;QACpD,IAAIU,GAAG,EAAE;UACPb,MAAM,CAACc,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAQ,CAAC,CAAC;QAChC;MACF;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}