{"ast":null,"code":"import { useStore } from \"vuex\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { axiosGet } from \"@/services/service\";\nexport default {\n  __name: 'workProofForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const allJobs = computed(() => {\n      return store.state.contractor.allJobs;\n    });\n    const jobCatogories = ref(null);\n    function addWorkProof(category_id) {\n      console.log(category_id);\n    }\n    onMounted(async () => {\n      store.dispatch(\"triggerSetJobs\");\n      const result = await axiosGet(\"/getCategories\");\n      jobCatogories.value = result.data;\n      console.log(allJobs.value);\n      console.log(jobCatogories.value);\n    });\n    const __returned__ = {\n      store,\n      allJobs,\n      jobCatogories,\n      addWorkProof,\n      get useStore() {\n        return useStore;\n      },\n      computed,\n      onMounted,\n      ref,\n      get axiosGet() {\n        return axiosGet;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useStore","computed","onMounted","ref","axiosGet","store","allJobs","state","contractor","jobCatogories","addWorkProof","category_id","console","log","dispatch","result","value","data"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/workProofForm.vue"],"sourcesContent":["<template>\n  <v-container class=\"d-flex flex-row justify-center align-center\">\n    <p v-if=\"allJobs.length == 0\" class=\"text-red text-h2 text-center\">\n      No Property Added\n    </p>\n    <div class=\"d-flex flex-column justify-center align-center ga-5\" v-else>\n      <v-card\n        style=\"width: 1000px\"\n        v-for=\"item in allJobs\"\n        :key=\"item.job_id\"\n        :elevation=\"12\"\n      >\n        <v-card-title class=\"text-h4\">{{ item.u_name }}</v-card-title>\n        <v-card-subtitle class=\"text-h6\">{{ item.u_email }}</v-card-subtitle>\n        <v-card-item class=\"text-h5\">{{ item.property_name }}</v-card-item>\n        <v-card-item class=\"text-h5\">{{ item.property_address }}</v-card-item>\n        <v-card-item class=\"d-flex flex-row justify-start\">\n          <div v-for=\"category in jobCatogories\" :key=\"category.category_id\">\n            <div v-if=\"category.job_id == item.job_id\">\n              <p>{{ category.title }}</p>\n              <v-btn\n                class=\"bg-teal-darken-4\"\n                @click=\"addWorkProof(category.job_category_id)\"\n                >Add Proof</v-btn\n              >\n            </div>\n          </div>\n        </v-card-item>\n      </v-card>\n    </div>\n  </v-container>\n</template>\n<script setup>\nimport { useStore } from \"vuex\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { axiosGet } from \"@/services/service\";\nconst store = useStore();\nconst allJobs = computed(() => {\n  return store.state.contractor.allJobs;\n});\nconst jobCatogories = ref(null);\nfunction addWorkProof(category_id) {\n  console.log(category_id);\n}\nonMounted(async () => {\n  store.dispatch(\"triggerSetJobs\");\n  const result = await axiosGet(\"/getCategories\");\n  jobCatogories.value = result.data;\n  console.log(allJobs.value);\n  console.log(jobCatogories.value);\n});\n</script>\n<style scoped></style>\n"],"mappings":"AAiCA,SAASA,QAAQ,QAAQ,MAAM;AAC/B,SAASC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,oBAAoB;;;;;;;IAC7C,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;IACxB,MAAMM,OAAO,GAAGL,QAAQ,CAAC,MAAM;MAC7B,OAAOI,KAAK,CAACE,KAAK,CAACC,UAAU,CAACF,OAAO;IACvC,CAAC,CAAC;IACF,MAAMG,aAAa,GAAGN,GAAG,CAAC,IAAI,CAAC;IAC/B,SAASO,YAAYA,CAACC,WAAW,EAAE;MACjCC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IAC1B;IACAT,SAAS,CAAC,YAAY;MACpBG,KAAK,CAACS,QAAQ,CAAC,gBAAgB,CAAC;MAChC,MAAMC,MAAM,GAAG,MAAMX,QAAQ,CAAC,gBAAgB,CAAC;MAC/CK,aAAa,CAACO,KAAK,GAAGD,MAAM,CAACE,IAAI;MACjCL,OAAO,CAACC,GAAG,CAACP,OAAO,CAACU,KAAK,CAAC;MAC1BJ,OAAO,CAACC,GAAG,CAACJ,aAAa,CAACO,KAAK,CAAC;IAClC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}