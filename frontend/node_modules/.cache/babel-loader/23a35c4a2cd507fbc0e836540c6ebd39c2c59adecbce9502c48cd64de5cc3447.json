{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { axiosPost } from \"../services/service\";\nexport default {\n  __name: 'ShowTask',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const job_id = ref(route.params.job_id);\n    const showEstimate = ref(false);\n    const task = computed(() => {\n      return store.state.contractor.tasksByJobId;\n    });\n    const cost = ref(null);\n    onMounted(async () => {\n      await store.dispatch(\"triggerSetTask\", {\n        job_id: job_id.value\n      });\n      console.log(store.state.contractor.tasksByJobId);\n    });\n    function back() {\n      router.push({\n        name: \"ShowJob\"\n      });\n    }\n    async function sendEstimate(job_id) {\n      console.log(job_id);\n      const result = await axiosPost(\"/addEstimate\", {\n        job_id: job_id,\n        cost: cost.value\n      });\n      if (result.status == 200) {\n        console.log(result.data);\n      }\n    }\n    const __returned__ = {\n      store,\n      route,\n      router,\n      job_id,\n      showEstimate,\n      task,\n      cost,\n      back,\n      sendEstimate,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      ref,\n      computed,\n      onMounted,\n      get useStore() {\n        return useStore;\n      },\n      get axiosPost() {\n        return axiosPost;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRoute","useRouter","ref","computed","onMounted","useStore","axiosPost","store","route","router","job_id","params","showEstimate","task","state","contractor","tasksByJobId","cost","dispatch","value","console","log","back","push","name","sendEstimate","result","status","data"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/ShowTask.vue"],"sourcesContent":["<template>\n  <v-card\n    :elevation=\"12\"\n    class=\"border rounded-xl outline-teal-darken-4\"\n    style=\"width: 1000px\"\n  >\n    <v-btn class=\"float-right bg-teal-darken-4 ma-2\" @click=\"back\">back</v-btn>\n    <v-card-item v-for=\"item in task\" :key=\"item.job_category_id\">\n      <v-card-title class=\"text-h4 text-teal-darken-4\">{{\n        item.title\n      }}</v-card-title>\n      <div class=\"d-flex flex-row justify-start align-center ga-5\">\n        <v-img\n          :src=\"'http://localhost:8000' + item.image\"\n          :alt=\"item.image\"\n          height=\"200\"\n          width=\"200\"\n        ></v-img>\n      </div>\n      <v-card-subtitle class=\"text-h6\">{{ item.description }}</v-card-subtitle>\n    </v-card-item>\n\n    <div\n      v-if=\"showEstimate\"\n      style=\"width: 500px\"\n      class=\"d-flex flex-row justify-center align-center ma\"\n    >\n      <v-text-field\n        variant=\"solo-filled\"\n        v-model=\"cost\"\n        label=\"Estimate Cost\"\n      ></v-text-field>\n      <v-btn\n        size=\"x-large\"\n        class=\"text-teal-darken-4\"\n        @click=\"sendEstimate(task[0].job_id)\"\n        >Send</v-btn\n      >\n    </div>\n    <div class=\"d-flex flex-row justify-end align-center\">\n      <v-btn class=\"bg-teal-darken-4 ma-2\" @click=\"showEstimate = !showEstimate\"\n        >Add Estimate</v-btn\n      >\n    </div>\n  </v-card>\n</template>\n<script setup>\nimport { useRoute, useRouter } from \"vue-router\";\nimport { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { axiosPost } from \"../services/service\";\nconst store = useStore();\nconst route = useRoute();\nconst router = useRouter();\nconst job_id = ref(route.params.job_id);\nconst showEstimate = ref(false);\nconst task = computed(() => {\n  return store.state.contractor.tasksByJobId;\n});\nconst cost = ref(null);\nonMounted(async () => {\n  await store.dispatch(\"triggerSetTask\", { job_id: job_id.value });\n  console.log(store.state.contractor.tasksByJobId);\n});\nfunction back() {\n  router.push({ name: \"ShowJob\" });\n}\nasync function sendEstimate(job_id) {\n  console.log(job_id);\n  const result = await axiosPost(\"/addEstimate\", {\n    job_id: job_id,\n    cost: cost.value,\n  });\n  if (result.status == 200) {\n    console.log(result.data);\n  }\n}\n</script>\n<style scoped></style>\n"],"mappings":";AA+CA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,SAASC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,qBAAqB;;;;;;;IAC/C,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,KAAK,GAAGR,QAAQ,CAAC,CAAC;IACxB,MAAMS,MAAM,GAAGR,SAAS,CAAC,CAAC;IAC1B,MAAMS,MAAM,GAAGR,GAAG,CAACM,KAAK,CAACG,MAAM,CAACD,MAAM,CAAC;IACvC,MAAME,YAAY,GAAGV,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMW,IAAI,GAAGV,QAAQ,CAAC,MAAM;MAC1B,OAAOI,KAAK,CAACO,KAAK,CAACC,UAAU,CAACC,YAAY;IAC5C,CAAC,CAAC;IACF,MAAMC,IAAI,GAAGf,GAAG,CAAC,IAAI,CAAC;IACtBE,SAAS,CAAC,YAAY;MACpB,MAAMG,KAAK,CAACW,QAAQ,CAAC,gBAAgB,EAAE;QAAER,MAAM,EAAEA,MAAM,CAACS;MAAM,CAAC,CAAC;MAChEC,OAAO,CAACC,GAAG,CAACd,KAAK,CAACO,KAAK,CAACC,UAAU,CAACC,YAAY,CAAC;IAClD,CAAC,CAAC;IACF,SAASM,IAAIA,CAAA,EAAG;MACdb,MAAM,CAACc,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;IAClC;IACA,eAAeC,YAAYA,CAACf,MAAM,EAAE;MAClCU,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;MACnB,MAAMgB,MAAM,GAAG,MAAMpB,SAAS,CAAC,cAAc,EAAE;QAC7CI,MAAM,EAAEA,MAAM;QACdO,IAAI,EAAEA,IAAI,CAACE;MACb,CAAC,CAAC;MACF,IAAIO,MAAM,CAACC,MAAM,IAAI,GAAG,EAAE;QACxBP,OAAO,CAACC,GAAG,CAACK,MAAM,CAACE,IAAI,CAAC;MAC1B;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}