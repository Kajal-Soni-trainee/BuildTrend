{"ast":null,"code":"import { reactive, computed } from \"vue\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required } from \"@vuelidate/validators\";\nimport { axiosPost } from \"../services/service\";\nexport default {\n  __name: 'AddProperty',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const propertyData = reactive({\n      name: null,\n      address: null\n    });\n    const rules = computed(() => {\n      return {\n        name: {\n          required\n        },\n        address: {\n          required\n        }\n      };\n    });\n    const v$ = useVuelidate(rules, propertyData);\n    async function addProperty() {\n      const isValide = await v$.value.$validate();\n      if (isValide) {\n        const res = await axiosPost(\"/addProperty\", propertyData);\n        console.log(res);\n      }\n    }\n    const __returned__ = {\n      propertyData,\n      rules,\n      v$,\n      addProperty,\n      reactive,\n      computed,\n      get useVuelidate() {\n        return useVuelidate;\n      },\n      get required() {\n        return required;\n      },\n      get axiosPost() {\n        return axiosPost;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","computed","useVuelidate","required","axiosPost","propertyData","name","address","rules","v$","addProperty","isValide","value","$validate","res","console","log"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/AddProperty.vue"],"sourcesContent":["<template>\n  <v-card style=\"width: 800px\" :elevation=\"12\" class=\"rounded-xl pa-5\">\n    <v-card-title class=\"text-h4 text-center text-teal-darken-4\"\n      >Add Property Form</v-card-title\n    >\n    <v-form>\n      <v-text-field\n        variant=\"solo-filled\"\n        label=\"Property Name\"\n        v-model=\"propertyData.name\"\n        :error-messages=\"v$.name.$errors.map((e) => e.$message)\"\n        @blur=\"v$.name.$touch\"\n      ></v-text-field>\n      <v-textarea\n        variant=\"solo-filled\"\n        label=\"Address\"\n        v-model=\"propertyData.address\"\n        :error-messages=\"v$.address.$errors.map((e) => e.$message)\"\n        @blur=\"v$.address.$touch\"\n      ></v-textarea>\n      <div class=\"d-flex flex-row justify-center align-center\">\n        <v-btn class=\"bg-teal-darken-4\" @click=\"addProperty\"\n          >Add Property</v-btn\n        >\n      </div>\n    </v-form>\n  </v-card>\n  <v-dialog v-model=\"alert\" width=\"auto\">\n    <v-card class=\"pa-5\"><div>\n      \n    </div><p>Property Add Successfully</p></v-card>\n  </v-dialog>\n</template>\n<script setup>\nimport { reactive, computed } from \"vue\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required } from \"@vuelidate/validators\";\nimport { axiosPost } from \"../services/service\";\n\nconst propertyData = reactive({\n  name: null,\n  address: null,\n});\n\nconst rules = computed(() => {\n  return {\n    name: { required },\n    address: { required },\n  };\n});\n\nconst v$ = useVuelidate(rules, propertyData);\nasync function addProperty() {\n  const isValide = await v$.value.$validate();\n  if (isValide) {\n    const res = await axiosPost(\"/addProperty\", propertyData);\n    console.log(res);\n  }\n}\n</script>\n<style scoped></style>\n"],"mappings":"AAkCA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,KAAK;AACxC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,qBAAqB;;;;;;;IAE/C,MAAMC,YAAY,GAAGL,QAAQ,CAAC;MAC5BM,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGP,QAAQ,CAAC,MAAM;MAC3B,OAAO;QACLK,IAAI,EAAE;UAAEH;QAAS,CAAC;QAClBI,OAAO,EAAE;UAAEJ;QAAS;MACtB,CAAC;IACH,CAAC,CAAC;IAEF,MAAMM,EAAE,GAAGP,YAAY,CAACM,KAAK,EAAEH,YAAY,CAAC;IAC5C,eAAeK,WAAWA,CAAA,EAAG;MAC3B,MAAMC,QAAQ,GAAG,MAAMF,EAAE,CAACG,KAAK,CAACC,SAAS,CAAC,CAAC;MAC3C,IAAIF,QAAQ,EAAE;QACZ,MAAMG,GAAG,GAAG,MAAMV,SAAS,CAAC,cAAc,EAAEC,YAAY,CAAC;QACzDU,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}