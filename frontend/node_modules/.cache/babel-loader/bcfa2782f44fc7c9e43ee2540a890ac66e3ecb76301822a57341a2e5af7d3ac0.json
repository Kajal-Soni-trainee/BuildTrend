{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from \"vue-router\";\nimport { reactive, computed, ref } from \"vue\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required, sameAs, helpers, email } from \"@vuelidate/validators\";\nimport { axiosPost } from \"../services/service\";\nimport { onlyChar, isNumber, isCapAlpha, isSpecialChar, isPhone } from \"../../public/scripts/validation\";\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const showPass = ref(false);\n    const showConfirmPass = ref(false);\n    const router = useRouter();\n    const roleItem = reactive([{\n      text: \"Contractor\",\n      value: 1\n    }, {\n      text: \"Property Owner\",\n      value: 0\n    }]);\n    const userData = reactive({\n      name: null,\n      email: null,\n      address: null,\n      contact: null,\n      role: null,\n      password: null,\n      cpassword: null\n    });\n    const rules = computed(() => {\n      return {\n        name: {\n          required,\n          onlyChar: helpers.withMessage(\"name should only contain characters\", onlyChar)\n        },\n        email: {\n          required,\n          email: helpers.withMessage(\"invalide email\", email)\n        },\n        address: {\n          required\n        },\n        contact: {\n          required,\n          isPhone: helpers.withMessage(\"contact number should be of 10 digits\", isPhone)\n        },\n        role: {\n          required\n        },\n        password: {\n          required,\n          isNumber: helpers.withMessage(\"Password should contain some digits\", isNumber),\n          isCapAlpha: helpers.withMessage(\"Password should contain some capital letters \", isCapAlpha),\n          isSpecialChar: helpers.withMessage(\"Password should contain some specia charaters\", isSpecialChar)\n        },\n        cpassword: {\n          required,\n          sameAs: sameAs(userData.password)\n        }\n      };\n    });\n    const v$ = useVuelidate(rules, userData);\n    async function submit() {\n      const result = await v$.value.$validate();\n      if (result) {\n        const result = await axiosPost(\"/register\", {\n          name: userData.name,\n          email: userData.email,\n          password: userData.password,\n          address: userData.address,\n          contact: userData.contact,\n          role: userData.role\n        });\n        if (result) {\n          console.log(result);\n          router.push({\n            name: \"Login\"\n          });\n        }\n      }\n    }\n    const __returned__ = {\n      showPass,\n      showConfirmPass,\n      router,\n      roleItem,\n      userData,\n      rules,\n      v$,\n      submit,\n      get useRouter() {\n        return useRouter;\n      },\n      reactive,\n      computed,\n      ref,\n      get useVuelidate() {\n        return useVuelidate;\n      },\n      get required() {\n        return required;\n      },\n      get sameAs() {\n        return sameAs;\n      },\n      get helpers() {\n        return helpers;\n      },\n      get email() {\n        return email;\n      },\n      get axiosPost() {\n        return axiosPost;\n      },\n      get onlyChar() {\n        return onlyChar;\n      },\n      get isNumber() {\n        return isNumber;\n      },\n      get isCapAlpha() {\n        return isCapAlpha;\n      },\n      get isSpecialChar() {\n        return isSpecialChar;\n      },\n      get isPhone() {\n        return isPhone;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRouter","reactive","computed","ref","useVuelidate","required","sameAs","helpers","email","axiosPost","onlyChar","isNumber","isCapAlpha","isSpecialChar","isPhone","showPass","showConfirmPass","router","roleItem","text","value","userData","name","address","contact","role","password","cpassword","rules","withMessage","v$","submit","result","$validate","console","log","push"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/Register.vue"],"sourcesContent":["<template>\n  <v-card style=\"width: 1000px\" :elevation=\"12\" class=\"pa-5 rounded-xl\">\n    <v-card-title class=\"text-teal-darken-4 text-h4 text-center py-5\"\n      >Registeration From</v-card-title\n    >\n    <v-form>\n      <v-row>\n        <v-col md=\"6\">\n          <v-text-field\n            v-model=\"userData.name\"\n            variant=\"solo-filled\"\n            label=\"Name\"\n            :error-messages=\"v$.name.$errors.map((e) => e.$message)\"\n            @blur=\"v$.name.$touch\"\n          ></v-text-field>\n        </v-col>\n        <v-col md=\"6\">\n          <v-text-field\n            v-model=\"userData.email\"\n            variant=\"solo-filled\"\n            label=\"Email\"\n            :error-messages=\"v$.email.$errors.map((e) => e.$message)\"\n            @blur=\"v$.email.$touch\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col md=\"6\">\n          <v-text-field\n            variant=\"solo-filled\"\n            v-model=\"userData.contact\"\n            label=\"Contact\"\n            :error-messages=\"v$.contact.$errors.map((e) => e.$message)\"\n            @blur=\"v$.contact.$touch\"\n          ></v-text-field>\n        </v-col>\n        <v-col md=\"6\">\n          <v-select\n            variant=\"solo-filled\"\n            label=\"Role\"\n            v-model=\"userData.role\"\n            :items=\"role\"\n            item-value=\"value\"\n            item-text=\"text\"\n            :error-messages=\"v$.role.$errors.map((e) => e.$message)\"\n            @blur=\"v$.role.$touch\"\n          >\n          </v-select>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col md=\"6\">\n          <v-text-field\n            variant=\"solo-filled\"\n            :type=\"showPass ? 'text' : 'password'\"\n            label=\"Password\"\n            v-model=\"userData.password\"\n            :append-inner-icon=\"showPass ? 'mdi-eye-off' : 'mdi-eye'\"\n            :error-messages=\"v$.password.$errors.map((e) => e.$message)\"\n            @blur=\"v$.password.$touch\"\n            @click:append-inner=\"showPass = !showPass\"\n          ></v-text-field>\n        </v-col>\n        <v-col md=\"6\">\n          <v-text-field\n            variant=\"solo-filled\"\n            label=\"Confirm Password\"\n            :type=\"showConfirmPass ? 'text' : 'password'\"\n            v-model=\"userData.cpassword\"\n            :append-inner-icon=\"showConfirmPass ? 'mdi-eye-off' : 'mdi-eye'\"\n            :error-messages=\"v$.cpassword.$errors.map((e) => e.$message)\"\n            @blur=\"v$.cpassword.$touch\"\n            @click:append-inner=\"showConfirmPass = !showConfirmPass\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col>\n          <v-textarea\n            v-model=\"userData.address\"\n            variant=\"solo-filled\"\n            label=\"Address\"\n            :error-messages=\"v$.address.$errors.map((e) => e.$message)\"\n            @blur=\"v$.address.$touch\"\n          >\n          </v-textarea>\n        </v-col>\n      </v-row>\n\n      <div class=\"d-flex flex-row justify-center align-center\">\n        <v-btn class=\"bg-teal-darken-4 text-h5\" @click=\"submit\">Submit</v-btn>\n      </div>\n    </v-form>\n  </v-card>\n</template>\n<script setup>\nimport { useRouter } from \"vue-router\";\nimport { reactive, computed, ref } from \"vue\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required, sameAs, helpers, email } from \"@vuelidate/validators\";\nimport { axiosPost } from \"../services/service\";\nimport {\n  onlyChar,\n  isNumber,\n  isCapAlpha,\n  isSpecialChar,\n  isPhone,\n} from \"../../public/scripts/validation\";\nconst showPass = ref(false);\nconst showConfirmPass = ref(false);\nconst router = useRouter();\nconst roleItem = reactive([\n  { text: \"Contractor\", value: 1 },\n  { text: \"Property Owner\", value: 0 },\n]);\nconst userData = reactive({\n  name: null,\n  email: null,\n  address: null,\n  contact: null,\n  role: null,\n  password: null,\n  cpassword: null,\n});\n\nconst rules = computed(() => {\n  return {\n    name: {\n      required,\n      onlyChar: helpers.withMessage(\n        \"name should only contain characters\",\n        onlyChar\n      ),\n    },\n    email: { required, email: helpers.withMessage(\"invalide email\", email) },\n    address: { required },\n    contact: {\n      required,\n      isPhone: helpers.withMessage(\n        \"contact number should be of 10 digits\",\n        isPhone\n      ),\n    },\n    role: { required },\n    password: {\n      required,\n      isNumber: helpers.withMessage(\n        \"Password should contain some digits\",\n        isNumber\n      ),\n      isCapAlpha: helpers.withMessage(\n        \"Password should contain some capital letters \",\n        isCapAlpha\n      ),\n      isSpecialChar: helpers.withMessage(\n        \"Password should contain some specia charaters\",\n        isSpecialChar\n      ),\n    },\n    cpassword: { required, sameAs: sameAs(userData.password) },\n  };\n});\nconst v$ = useVuelidate(rules, userData);\n\nasync function submit() {\n  const result = await v$.value.$validate();\n  if (result) {\n    const result = await axiosPost(\"/register\", {\n      name: userData.name,\n      email: userData.email,\n      password: userData.password,\n      address: userData.address,\n      contact: userData.contact,\n      role: userData.role,\n    });\n    if (result) {\n      console.log(result);\n      router.push({ name: \"Login\" });\n    }\n  }\n}\n</script>\n<style scoped></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}