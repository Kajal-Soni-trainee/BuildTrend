{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { ref, onMounted, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'ContractorMsg',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const job_id = ref(route.query.job_id);\n    const owner_id = ref(route.query.owner_id);\n    const u_name = ref(route.query.u_name);\n    const message = ref(null);\n    const messages = computed(() => {\n      console.log(store.state.contractor.messages);\n      return store.state.contractor.messages;\n    });\n    async function sendMsg(job_id, receiver_id) {\n      console.log(job_id, receiver_id);\n      const result = await axiosPost(\"/sendMsgByCon\", {\n        job_id: job_id,\n        receiver_id: receiver_id,\n        message: message.value\n      });\n      if (result.status == 200) {\n        console.log(result);\n      }\n    }\n    onMounted(async () => {\n      await store.dispatch(\"triggerSetMessages\", {\n        job_id: job_id.value,\n        owner_id: owner_id.value\n      });\n      console.log(messages.value);\n      console.log(u_name.value);\n    });\n    const __returned__ = {\n      store,\n      route,\n      job_id,\n      owner_id,\n      u_name,\n      message,\n      messages,\n      sendMsg,\n      get useRoute() {\n        return useRoute;\n      },\n      ref,\n      onMounted,\n      computed,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRoute","ref","onMounted","computed","useStore","store","route","job_id","query","owner_id","u_name","message","messages","console","log","state","contractor","sendMsg","receiver_id","result","axiosPost","value","status","dispatch"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/ContractorMsg.vue"],"sourcesContent":["<template>\n  <v-sheet class=\"scroll\" :elevation=\"12\" style=\"height: 1000px; width: 1000px\">\n    <v-card\n      class=\"scroll bg-teal-accent-1\"\n      :elevation=\"12\"\n      width=\"1000px\"\n      style=\"height: 1000px; width: 1000px\"\n    >\n      <v-toolbar\n        ><v-icon size=\"50px\"> mdi-account</v-icon>\n        <v-toolbar-title>{{ u_name }}</v-toolbar-title>\n      </v-toolbar>\n      <v-spacer></v-spacer>\n      <v-spacer></v-spacer>\n      <div v-for=\"item in messages\" :key=\"item.message_id\">\n        <div\n          v-if=\"item.sender_id == owner_id\"\n          class=\"float-right border-lg bg-yellow-lighten-5 rounded-xl pa-5 mt-2\"\n        >\n          <p>cvbgnhm m{{ item.message }}</p>\n        </div>\n        <div\n          v-else\n          class=\"float-right border-lg bg-teal-darken-4 rounded-xl pa-5 mt-2\"\n        >\n          <p class=\"text-h5\" style=\"width: 400px\">\n            cvbgnhm m{{ item.message }}\n          </p>\n        </div>\n      </div>\n    </v-card>\n    <div class=\"d-flex flex-row justify-center align-center ga-3\">\n      <v-text-field\n        variant=\"solo-filled\"\n        label=\"Message\"\n        v-model=\"message\"\n      ></v-text-field>\n      <v-btn class=\"bg-teal-darken-4\" size=\"x-large\" @click=\"sendMsg\"\n        >send</v-btn\n      >\n    </div>\n  </v-sheet>\n</template>\n<script setup>\nimport { useRoute } from \"vue-router\";\nimport { ref, onMounted, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nconst store = useStore();\nconst route = useRoute();\nconst job_id = ref(route.query.job_id);\nconst owner_id = ref(route.query.owner_id);\nconst u_name = ref(route.query.u_name);\nconst message = ref(null);\nconst messages = computed(() => {\n  console.log(store.state.contractor.messages);\n  return store.state.contractor.messages;\n});\nasync function sendMsg(job_id, receiver_id) {\n  console.log(job_id, receiver_id);\n  const result = await axiosPost(\"/sendMsgByCon\", {\n    job_id: job_id,\n    receiver_id: receiver_id,\n    message: message.value,\n  });\n  if (result.status == 200) {\n    console.log(result);\n  }\n}\nonMounted(async () => {\n  await store.dispatch(\"triggerSetMessages\", {\n    job_id: job_id.value,\n    owner_id: owner_id.value,\n  });\n  console.log(messages.value);\n  console.log(u_name.value);\n});\n</script>\n<style scoped>\n.scroll {\n  overflow-y: scroll;\n}\n</style>\n"],"mappings":"AA4CA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAC/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,MAAMO,MAAM,GAAGN,GAAG,CAACK,KAAK,CAACE,KAAK,CAACD,MAAM,CAAC;IACtC,MAAME,QAAQ,GAAGR,GAAG,CAACK,KAAK,CAACE,KAAK,CAACC,QAAQ,CAAC;IAC1C,MAAMC,MAAM,GAAGT,GAAG,CAACK,KAAK,CAACE,KAAK,CAACE,MAAM,CAAC;IACtC,MAAMC,OAAO,GAAGV,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMW,QAAQ,GAAGT,QAAQ,CAAC,MAAM;MAC9BU,OAAO,CAACC,GAAG,CAACT,KAAK,CAACU,KAAK,CAACC,UAAU,CAACJ,QAAQ,CAAC;MAC5C,OAAOP,KAAK,CAACU,KAAK,CAACC,UAAU,CAACJ,QAAQ;IACxC,CAAC,CAAC;IACF,eAAeK,OAAOA,CAACV,MAAM,EAAEW,WAAW,EAAE;MAC1CL,OAAO,CAACC,GAAG,CAACP,MAAM,EAAEW,WAAW,CAAC;MAChC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAAC,eAAe,EAAE;QAC9Cb,MAAM,EAAEA,MAAM;QACdW,WAAW,EAAEA,WAAW;QACxBP,OAAO,EAAEA,OAAO,CAACU;MACnB,CAAC,CAAC;MACF,IAAIF,MAAM,CAACG,MAAM,IAAI,GAAG,EAAE;QACxBT,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;MACrB;IACF;IACAjB,SAAS,CAAC,YAAY;MACpB,MAAMG,KAAK,CAACkB,QAAQ,CAAC,oBAAoB,EAAE;QACzChB,MAAM,EAAEA,MAAM,CAACc,KAAK;QACpBZ,QAAQ,EAAEA,QAAQ,CAACY;MACrB,CAAC,CAAC;MACFR,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACS,KAAK,CAAC;MAC3BR,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACW,KAAK,CAAC;IAC3B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}