{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { ref, onMounted, computed } from \"vue\";\nexport default {\n  __name: 'OwnerMsg',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const job_id = ref(route.query.job_id);\n    const sender_id = ref(route.query.sender_id);\n    const receiver_id = ref(route.query.receiver_id);\n    const sender_name = ref(route.query.sender_name);\n    const receiver_name = ref(route.query.receiver_name);\n    const owner_id = computed(() => {\n      return store.state.property.owner_id;\n    });\n    const display_name = computed(() => {\n      if (sender_id.value == owner_id.value) {\n        return receiver_name.value;\n      } else {\n        return sender_name.value;\n      }\n    });\n    const msgReceiver = computed(() => {\n      if (sender_id.value == owner_id.value) {\n        return receiver_id.value;\n      } else {\n        return sender_id.value;\n      }\n    });\n    const allMsgs = computed(() => {\n      return store.state.property.msgsByJobId;\n    });\n    async function sendMsg() {\n      const result = await axiosPost(\"/sendMsgByCon\", {\n        job_id: job_id.value,\n        receiver_id: msgReceiver.value,\n        message: message.value\n      });\n      if (result.status == 200) {\n        console.log(result);\n      }\n    }\n    onMounted(async () => {\n      await store.dispatch(\"triggerSetMsgsByJobId\", {\n        job_id: job_id.value,\n        sender_id: sender_id.value,\n        receiver_id: receiver_id.value\n      });\n      console.log(sender_name.value, receiver_name.value, owner_id.value, allMsgs.value);\n    });\n    const __returned__ = {\n      store,\n      route,\n      job_id,\n      sender_id,\n      receiver_id,\n      sender_name,\n      receiver_name,\n      owner_id,\n      display_name,\n      msgReceiver,\n      allMsgs,\n      sendMsg,\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      ref,\n      onMounted,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRoute","useStore","ref","onMounted","computed","store","route","job_id","query","sender_id","receiver_id","sender_name","receiver_name","owner_id","state","property","display_name","value","msgReceiver","allMsgs","msgsByJobId","sendMsg","result","axiosPost","message","status","console","log","dispatch"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/OwnerMsg.vue"],"sourcesContent":["<template>\n  <v-sheet class=\"scroll\" :elevation=\"12\" style=\"height: 1000px; width: 1000px\">\n    <v-card\n      class=\"scroll bg-teal-accent-1\"\n      :elevation=\"12\"\n      width=\"1000px\"\n      style=\"height: 1000px; width: 1000px\"\n    >\n      <v-toolbar\n        ><v-icon size=\"50px\"> mdi-account</v-icon>\n        <v-toolbar-title>{{ display_name }}</v-toolbar-title>\n      </v-toolbar>\n      <v-spacer></v-spacer>\n      <v-spacer></v-spacer>\n      <template v-for=\"item in allMsgs\" :key=\"item.message_id\">\n        <div\n          v-if=\"item.sender_id != owner_id\"\n          style=\"clear: both\"\n          class=\"float-right border-lg bg-yellow-lighten-5 rounded-xl pa-5 mt-2\"\n        >\n          <p>{{ item.message }}</p>\n        </div>\n        <div\n          v-else\n          style=\"clear: both\"\n          class=\"float-right border-lg bg-teal-darken-4 rounded-xl pa-5 mt-2\"\n        >\n          <p class=\"text-h5\" style=\"width: 400px\">\n            {{ item.message }}\n          </p>\n        </div>\n      </template>\n    </v-card>\n    <div class=\"d-flex flex-row justify-center align-center ga-3\">\n      <v-text-field\n        variant=\"solo-filled\"\n        label=\"Message\"\n        v-model=\"message\"\n      ></v-text-field>\n      <v-btn class=\"bg-teal-darken-4\" size=\"x-large\" @click=\"sendMsg\"\n        >send</v-btn\n      >\n    </div>\n  </v-sheet>\n</template>\n<script setup>\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { ref, onMounted, computed } from \"vue\";\nconst store = useStore();\nconst route = useRoute();\nconst job_id = ref(route.query.job_id);\nconst sender_id = ref(route.query.sender_id);\nconst receiver_id = ref(route.query.receiver_id);\nconst sender_name = ref(route.query.sender_name);\nconst receiver_name = ref(route.query.receiver_name);\nconst owner_id = computed(() => {\n  return store.state.property.owner_id;\n});\nconst display_name = computed(() => {\n  if (sender_id.value == owner_id.value) {\n    return receiver_name.value;\n  } else {\n    return sender_name.value;\n  }\n});\n\nconst msgReceiver = computed(() => {\n  if (sender_id.value == owner_id.value) {\n    return receiver_id.value;\n  } else {\n    return sender_id.value;\n  }\n});\n\nconst allMsgs = computed(() => {\n  return store.state.property.msgsByJobId;\n});\n\nasync function sendMsg() {\n  const result = await axiosPost(\"/sendMsgByCon\", {\n    job_id: job_id.value,\n    receiver_id: msgReceiver.value,\n    message: message.value,\n  });\n  if (result.status == 200) {\n    console.log(result);\n  }\n}\nonMounted(async () => {\n  await store.dispatch(\"triggerSetMsgsByJobId\", {\n    job_id: job_id.value,\n    sender_id: sender_id.value,\n    receiver_id: receiver_id.value,\n  });\n  console.log(\n    sender_name.value,\n    receiver_name.value,\n    owner_id.value,\n    allMsgs.value\n  );\n});\n</script>\n<style scoped></style>\n"],"mappings":"AA8CA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;IAC9C,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,MAAMO,MAAM,GAAGL,GAAG,CAACI,KAAK,CAACE,KAAK,CAACD,MAAM,CAAC;IACtC,MAAME,SAAS,GAAGP,GAAG,CAACI,KAAK,CAACE,KAAK,CAACC,SAAS,CAAC;IAC5C,MAAMC,WAAW,GAAGR,GAAG,CAACI,KAAK,CAACE,KAAK,CAACE,WAAW,CAAC;IAChD,MAAMC,WAAW,GAAGT,GAAG,CAACI,KAAK,CAACE,KAAK,CAACG,WAAW,CAAC;IAChD,MAAMC,aAAa,GAAGV,GAAG,CAACI,KAAK,CAACE,KAAK,CAACI,aAAa,CAAC;IACpD,MAAMC,QAAQ,GAAGT,QAAQ,CAAC,MAAM;MAC9B,OAAOC,KAAK,CAACS,KAAK,CAACC,QAAQ,CAACF,QAAQ;IACtC,CAAC,CAAC;IACF,MAAMG,YAAY,GAAGZ,QAAQ,CAAC,MAAM;MAClC,IAAIK,SAAS,CAACQ,KAAK,IAAIJ,QAAQ,CAACI,KAAK,EAAE;QACrC,OAAOL,aAAa,CAACK,KAAK;MAC5B,CAAC,MAAM;QACL,OAAON,WAAW,CAACM,KAAK;MAC1B;IACF,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAGd,QAAQ,CAAC,MAAM;MACjC,IAAIK,SAAS,CAACQ,KAAK,IAAIJ,QAAQ,CAACI,KAAK,EAAE;QACrC,OAAOP,WAAW,CAACO,KAAK;MAC1B,CAAC,MAAM;QACL,OAAOR,SAAS,CAACQ,KAAK;MACxB;IACF,CAAC,CAAC;IAEF,MAAME,OAAO,GAAGf,QAAQ,CAAC,MAAM;MAC7B,OAAOC,KAAK,CAACS,KAAK,CAACC,QAAQ,CAACK,WAAW;IACzC,CAAC,CAAC;IAEF,eAAeC,OAAOA,CAAA,EAAG;MACvB,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAAC,eAAe,EAAE;QAC9ChB,MAAM,EAAEA,MAAM,CAACU,KAAK;QACpBP,WAAW,EAAEQ,WAAW,CAACD,KAAK;QAC9BO,OAAO,EAAEA,OAAO,CAACP;MACnB,CAAC,CAAC;MACF,IAAIK,MAAM,CAACG,MAAM,IAAI,GAAG,EAAE;QACxBC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;MACrB;IACF;IACAnB,SAAS,CAAC,YAAY;MACpB,MAAME,KAAK,CAACuB,QAAQ,CAAC,uBAAuB,EAAE;QAC5CrB,MAAM,EAAEA,MAAM,CAACU,KAAK;QACpBR,SAAS,EAAEA,SAAS,CAACQ,KAAK;QAC1BP,WAAW,EAAEA,WAAW,CAACO;MAC3B,CAAC,CAAC;MACFS,OAAO,CAACC,GAAG,CACThB,WAAW,CAACM,KAAK,EACjBL,aAAa,CAACK,KAAK,EACnBJ,QAAQ,CAACI,KAAK,EACdE,OAAO,CAACF,KACV,CAAC;IACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}