{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { axiosGet } from \"../services/service\";\nimport { onMounted, reactive, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { axiosPost } from \"../services/service\";\nexport default {\n  __name: 'ShowJob',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const dialog = ref(false);\n    const propertyData = reactive({\n      data: []\n    });\n    const message = ref(null);\n    function viewTask(job_id) {\n      router.push({\n        name: \"ShowTask\",\n        params: {\n          job_id: job_id\n        }\n      });\n    }\n    async function sendMsg(job_id, receiver_id) {\n      console.log(job_id, receiver_id);\n      const result = await axiosPost(\"/sendMsgByCon\", {\n        job_id: job_id,\n        receiver_id: receiver_id,\n        message: message.value\n      });\n      if (result.status == 200) {\n        console.log(result);\n      }\n    }\n    onMounted(async () => {\n      const result = await axiosGet(\"/showJobs\");\n      if (result.status == 200) {\n        console.log(result.data);\n        propertyData.data = result.data;\n      }\n    });\n    const __returned__ = {\n      router,\n      dialog,\n      propertyData,\n      message,\n      viewTask,\n      sendMsg,\n      get axiosGet() {\n        return axiosGet;\n      },\n      onMounted,\n      reactive,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get axiosPost() {\n        return axiosPost;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axiosGet","onMounted","reactive","ref","useRouter","axiosPost","router","dialog","propertyData","data","message","viewTask","job_id","push","name","params","sendMsg","receiver_id","console","log","result","value","status"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/ShowJob.vue"],"sourcesContent":["<template>\n  <v-container class=\"d-flex flex-row justify-center align-center\">\n    <p\n      v-if=\"propertyData.data.length == 0\"\n      class=\"text-red text-h2 text-center\"\n    >\n      No Property Added\n    </p>\n    <div class=\"d-flex flex-column justify-center align-center ga-3\" v-else>\n      <v-card\n        style=\"width: 1000px\"\n        v-for=\"item in propertyData.data\"\n        :key=\"item.job_id\"\n        :elevation=\"12\"\n      >\n        <v-card-title class=\"text-h4\">{{ item.u_name }}</v-card-title>\n        <v-card-subtitle class=\"text-h6\">{{ item.u_email }}</v-card-subtitle>\n        <v-card-item class=\"text-h5\">{{ item.property_name }}</v-card-item>\n        <v-card-item class=\"text-h5\">{{ item.property_address }}</v-card-item>\n        <v-card-item class=\"d-flex flex-row justify-end\"\n          ><v-btn class=\"bg-teal-darken-4 mx-2\" @click=\"viewTask(item.job_id)\"\n            >View Task</v-btn\n          >\n          <v-btn class=\"bg-teal-darken-4 mx-2\" @click=\"dialog = true\"\n            >Send Message</v-btn\n          >\n          <v-dialog v-model=\"dialog\" width=\"auto\">\n            <v-card width=\"600px\" class=\"pa-5\">\n              <div class=\"d-flex flex-row justify-center align-center\">\n                <v-text-field\n                  variant=\"solo-filled\"\n                  label=\"Message\"\n                  v-model=\"message\"\n                ></v-text-field>\n                <v-btn\n                  class=\"bg-teal-darken-4\"\n                  @click=\"sendMsg(item.job_id, item.owner_id)\"\n                  >send</v-btn\n                >\n              </div>\n              <template v-slot:actions>\n                <v-btn class=\"bg-teal-darken-4\" @click=\"dialog = false\"\n                  >close</v-btn\n                >\n              </template>\n            </v-card>\n          </v-dialog>\n        </v-card-item>\n      </v-card>\n    </div>\n  </v-container>\n</template>\n<script setup>\nimport { axiosGet } from \"../services/service\";\nimport { onMounted, reactive, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { axiosPost } from \"../services/service\";\nconst router = useRouter();\nconst dialog = ref(false);\nconst propertyData = reactive({ data: [] });\nconst message = ref(null);\nfunction viewTask(job_id) {\n  router.push({ name: \"ShowTask\", params: { job_id: job_id } });\n}\nasync function sendMsg(job_id, receiver_id) {\n  console.log(job_id, receiver_id);\n  const result = await axiosPost(\"/sendMsgByCon\", {\n    job_id: job_id,\n    receiver_id: receiver_id,\n    message: message.value,\n  });\n  if (result.status == 200) {\n    console.log(result);\n  }\n}\nonMounted(async () => {\n  const result = await axiosGet(\"/showJobs\");\n  if (result.status == 200) {\n    console.log(result.data);\n    propertyData.data = result.data;\n  }\n});\n</script>\n<style scoped></style>\n"],"mappings":";AAqDA,SAASA,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,qBAAqB;;;;;;;IAC/C,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,MAAM,GAAGJ,GAAG,CAAC,KAAK,CAAC;IACzB,MAAMK,YAAY,GAAGN,QAAQ,CAAC;MAAEO,IAAI,EAAE;IAAG,CAAC,CAAC;IAC3C,MAAMC,OAAO,GAAGP,GAAG,CAAC,IAAI,CAAC;IACzB,SAASQ,QAAQA,CAACC,MAAM,EAAE;MACxBN,MAAM,CAACO,IAAI,CAAC;QAAEC,IAAI,EAAE,UAAU;QAAEC,MAAM,EAAE;UAAEH,MAAM,EAAEA;QAAO;MAAE,CAAC,CAAC;IAC/D;IACA,eAAeI,OAAOA,CAACJ,MAAM,EAAEK,WAAW,EAAE;MAC1CC,OAAO,CAACC,GAAG,CAACP,MAAM,EAAEK,WAAW,CAAC;MAChC,MAAMG,MAAM,GAAG,MAAMf,SAAS,CAAC,eAAe,EAAE;QAC9CO,MAAM,EAAEA,MAAM;QACdK,WAAW,EAAEA,WAAW;QACxBP,OAAO,EAAEA,OAAO,CAACW;MACnB,CAAC,CAAC;MACF,IAAID,MAAM,CAACE,MAAM,IAAI,GAAG,EAAE;QACxBJ,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;MACrB;IACF;IACAnB,SAAS,CAAC,YAAY;MACpB,MAAMmB,MAAM,GAAG,MAAMpB,QAAQ,CAAC,WAAW,CAAC;MAC1C,IAAIoB,MAAM,CAACE,MAAM,IAAI,GAAG,EAAE;QACxBJ,OAAO,CAACC,GAAG,CAACC,MAAM,CAACX,IAAI,CAAC;QACxBD,YAAY,CAACC,IAAI,GAAGW,MAAM,CAACX,IAAI;MACjC;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}