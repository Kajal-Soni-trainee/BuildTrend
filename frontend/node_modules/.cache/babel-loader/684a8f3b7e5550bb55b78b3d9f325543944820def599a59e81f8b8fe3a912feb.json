{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useStore } from \"vuex\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { axiosPost } from \"@/services/service\";\nexport default {\n  __name: 'showWorkProof',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const dialog = ref(false);\n    const comment = ref(null);\n    const work_proof_id = ref(null);\n    const popup = ref(false);\n    const job_id = ref(route.params.job_id);\n    const workProofData = computed(() => {\n      return store.state.property.workProofDetails;\n    });\n    const workProofImage = computed(() => {\n      return store.state.property.workProofImages;\n    });\n    const workProofComments = computed(() => {\n      return store.state.property.workProofComments;\n    });\n    const contractorState = computed(() => {\n      return store.state.property.currentJobConState;\n    });\n    async function accepted() {\n      const result = await axiosPost(\"/job\");\n    }\n    async function rejected() {}\n    onMounted(async () => {\n      await store.dispatch(\"triggerSetWorkProofs\", {\n        job_id: job_id.value\n      });\n      console.log(workProofData.value);\n      console.log(workProofImage.value);\n    });\n    function displayForm(proof_id) {\n      work_proof_id.value = proof_id;\n      dialog.value = true;\n    }\n    function back() {\n      router.push({\n        name: \"OwnerJobs\"\n      });\n    }\n    async function addComment() {\n      const result = await axiosPost(\"/addComment\", {\n        comment: comment.value,\n        work_proof_id: work_proof_id.value\n      });\n      console.log(result.data);\n    }\n    const __returned__ = {\n      store,\n      route,\n      router,\n      dialog,\n      comment,\n      work_proof_id,\n      popup,\n      job_id,\n      workProofData,\n      workProofImage,\n      workProofComments,\n      contractorState,\n      accepted,\n      rejected,\n      displayForm,\n      back,\n      addComment,\n      get useStore() {\n        return useStore;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      computed,\n      onMounted,\n      ref,\n      get axiosPost() {\n        return axiosPost;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useStore","useRoute","useRouter","computed","onMounted","ref","axiosPost","store","route","router","dialog","comment","work_proof_id","popup","job_id","params","workProofData","state","property","workProofDetails","workProofImage","workProofImages","workProofComments","contractorState","currentJobConState","accepted","result","rejected","dispatch","value","console","log","displayForm","proof_id","back","push","name","addComment","data"],"sources":["/home/kajal-soni/Documents/VueJs/buildtrend/frontend/src/components/showWorkProof.vue"],"sourcesContent":["<template>\n  <p v-if=\"workProofData.length == 0\" class=\"text-h2 text-red\">\n    No Work Proof Added\n  </p>\n  <v-card\n    v-else\n    :elevation=\"12\"\n    class=\"border rounded-xl outline-teal-darken-4\"\n    style=\"width: 1000px\"\n  >\n    <v-card-item v-for=\"item in workProofData\" :key=\"item.job_category_id\">\n      <v-card-title class=\"text-h4 text-teal-darken-4\">{{\n        item.title\n      }}</v-card-title>\n      <div\n        v-for=\"image in workProofImage\"\n        :key=\"image.work_image_id\"\n        class=\"d-flex flex-row ma-5\"\n      >\n        <div class=\"d-flex flex-column align-center\">\n          <v-img\n            v-if=\"image.work_proof_id == item.work_proof_id\"\n            :src=\"'http://localhost:8000' + image.image\"\n            :alt=\"image.image\"\n            height=\"200\"\n            width=\"200\"\n            @click=\"displayForm(image.work_proof_id)\"\n          ></v-img>\n          <div>\n            <p class=\"text-center text-h6\">Comments:</p>\n            <template\n              v-for=\"comment in workProofComments\"\n              :key=\"comment.comment_id\"\n            >\n              <p\n                class=\"text-red\"\n                v-if=\"comment.work_image_id == image.work_image_id\"\n              >\n                {{ comment.comment }}\n              </p>\n            </template>\n          </div>\n        </div>\n      </div>\n      <v-dialog v-model=\"dialog\" width=\"auto\">\n        <v-card width=\"600px\" class=\"pa-5\">\n          <v-text-field\n            variant=\"solo-filled\"\n            v-model=\"comment\"\n            label=\"Comment\"\n          ></v-text-field>\n          <template v-slot:actions>\n            <v-btn class=\"bg-teal-darken-4\" @click=\"dialog = false\"\n              >close</v-btn\n            >\n            <v-btn class=\"bg-teal-darken-4\" @click=\"addComment()\"\n              >Add Comment</v-btn\n            >\n          </template>\n        </v-card>\n      </v-dialog>\n      <v-card-title class=\"text-h5\">Description:</v-card-title\n      ><v-card-subtitle class=\"text-h6\">{{ item.description }}</v-card-subtitle>\n    </v-card-item>\n\n    <div\n      class=\"d-flex flex-column justify-center align-center\"\n      v-if=\"contractorState == 2\"\n    >\n      <P class=\"text-teal-darken-4\">Job Done From Contractor Side</P>\n      <v-btn @click=\"popup = true\">Do you agree?</v-btn>\n    </div>\n    <div class=\"d-flex flex-row justify-end align-center\">\n      <v-btn class=\"bg-teal-darken-4 ma-2\" @click=\"back\">back</v-btn>\n    </div>\n    <v-dialog v-model=\"popup\" width=\"auto\">\n      <v-card style=\"width: 400px; height: 150px\" class=\"pa-6\">\n        <div class=\"d-flex flex-column justify-center align-center\">\n          <p>Do you agree that job is Done ?</p>\n          <v-card-item class=\"d-flex flex-row justify-center align-center\">\n            <v-btn class=\"ma-2\" @click=\"accepted\">Yes</v-btn>\n            <v-btn class=\"ma-2\" @click=\"rejected\">No</v-btn>\n          </v-card-item>\n        </div>\n      </v-card>\n    </v-dialog>\n  </v-card>\n</template>\n<script setup>\nimport { useStore } from \"vuex\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { axiosPost } from \"@/services/service\";\nconst store = useStore();\nconst route = useRoute();\nconst router = useRouter();\nconst dialog = ref(false);\nconst comment = ref(null);\nconst work_proof_id = ref(null);\nconst popup = ref(false);\nconst job_id = ref(route.params.job_id);\nconst workProofData = computed(() => {\n  return store.state.property.workProofDetails;\n});\nconst workProofImage = computed(() => {\n  return store.state.property.workProofImages;\n});\nconst workProofComments = computed(() => {\n  return store.state.property.workProofComments;\n});\nconst contractorState = computed(() => {\n  return store.state.property.currentJobConState;\n});\n\nasync function accepted(){\nconst result = await axiosPost(\"/job\")\n}\nasync function rejected(){\n\n}\nonMounted(async () => {\n  await store.dispatch(\"triggerSetWorkProofs\", { job_id: job_id.value });\n  console.log(workProofData.value);\n  console.log(workProofImage.value);\n});\nfunction displayForm(proof_id) {\n  work_proof_id.value = proof_id;\n  dialog.value = true;\n}\nfunction back() {\n  router.push({ name: \"OwnerJobs\" });\n}\nasync function addComment() {\n  const result = await axiosPost(\"/addComment\", {\n    comment: comment.value,\n    work_proof_id: work_proof_id.value,\n  });\n  console.log(result.data);\n}\n</script>\n<style scoped></style>\n"],"mappings":";AAyFA,SAASA,QAAQ,QAAQ,MAAM;AAC/B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,oBAAoB;;;;;;;IAC9C,MAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,MAAM,GAAGP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,MAAM,GAAGL,GAAG,CAAC,KAAK,CAAC;IACzB,MAAMM,OAAO,GAAGN,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMO,aAAa,GAAGP,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMQ,KAAK,GAAGR,GAAG,CAAC,KAAK,CAAC;IACxB,MAAMS,MAAM,GAAGT,GAAG,CAACG,KAAK,CAACO,MAAM,CAACD,MAAM,CAAC;IACvC,MAAME,aAAa,GAAGb,QAAQ,CAAC,MAAM;MACnC,OAAOI,KAAK,CAACU,KAAK,CAACC,QAAQ,CAACC,gBAAgB;IAC9C,CAAC,CAAC;IACF,MAAMC,cAAc,GAAGjB,QAAQ,CAAC,MAAM;MACpC,OAAOI,KAAK,CAACU,KAAK,CAACC,QAAQ,CAACG,eAAe;IAC7C,CAAC,CAAC;IACF,MAAMC,iBAAiB,GAAGnB,QAAQ,CAAC,MAAM;MACvC,OAAOI,KAAK,CAACU,KAAK,CAACC,QAAQ,CAACI,iBAAiB;IAC/C,CAAC,CAAC;IACF,MAAMC,eAAe,GAAGpB,QAAQ,CAAC,MAAM;MACrC,OAAOI,KAAK,CAACU,KAAK,CAACC,QAAQ,CAACM,kBAAkB;IAChD,CAAC,CAAC;IAEF,eAAeC,QAAQA,CAAA,EAAE;MACzB,MAAMC,MAAM,GAAG,MAAMpB,SAAS,CAAC,MAAM,CAAC;IACtC;IACA,eAAeqB,QAAQA,CAAA,EAAE,CAEzB;IACAvB,SAAS,CAAC,YAAY;MACpB,MAAMG,KAAK,CAACqB,QAAQ,CAAC,sBAAsB,EAAE;QAAEd,MAAM,EAAEA,MAAM,CAACe;MAAM,CAAC,CAAC;MACtEC,OAAO,CAACC,GAAG,CAACf,aAAa,CAACa,KAAK,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACX,cAAc,CAACS,KAAK,CAAC;IACnC,CAAC,CAAC;IACF,SAASG,WAAWA,CAACC,QAAQ,EAAE;MAC7BrB,aAAa,CAACiB,KAAK,GAAGI,QAAQ;MAC9BvB,MAAM,CAACmB,KAAK,GAAG,IAAI;IACrB;IACA,SAASK,IAAIA,CAAA,EAAG;MACdzB,MAAM,CAAC0B,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC;IACpC;IACA,eAAeC,UAAUA,CAAA,EAAG;MAC1B,MAAMX,MAAM,GAAG,MAAMpB,SAAS,CAAC,aAAa,EAAE;QAC5CK,OAAO,EAAEA,OAAO,CAACkB,KAAK;QACtBjB,aAAa,EAAEA,aAAa,CAACiB;MAC/B,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACL,MAAM,CAACY,IAAI,CAAC;IAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}